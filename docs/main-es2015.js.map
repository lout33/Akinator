{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/akinator.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/game/game.component.ts","./src/app/pages/game/game.component.html","./src/app/pages/start/start.component.ts","./src/app/pages/start/start.component.html","./src/assets/class.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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AO;QACjB,4DAAO;QACT,4DAAM;QAER,4DAAM;QACR,4DAAM;;6FDbO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;AEPD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3RA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Node,BST} from './../assets/class.js';\nimport {default as bitree } from './../assets/tree03.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AkinatorService {\n\n  bst\n  private gameHasStarted = new Subject<boolean>();\n  gameHasStarted$ = this.gameHasStarted.asObservable();\n  pattern = []\n  \n  announceMission(mission: boolean) {\n    this.gameHasStarted.next(mission);\n  }\n\n  // confirmMission(astronaut: string) {\n  //   this.missionConfirmedSource.next(astronaut);\n  // }\n  constructor(private http:HttpClient) { }\n\n  getQuestion(){\n\n    console.log(this.pattern);\n    let findedNode =  this.bst.find(this.pattern)\n    if(findedNode.animal){\n\n      return {question:findedNode.question,animal:findedNode.animal}\n    }\n    console.log(findedNode.question);\n    return {question:findedNode.question}\n\n  }\n\n  startClass(){\n    this.bst =  new BST()\n    // @ts-ignore: Unreachable code error\n    this.bst.root = bitree.root\n    console.log(this.bst);\n  }\n  \n  startTree(){\n    console.log(bitree);\n  }\n}\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AkinatorService } from \"./akinator.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor( private _akinator:AkinatorService){\n    \n  }\n  // title = 'akinator';\n  // gameHasStarted\n  gameHasStarted = false;\n\n \n  ngOnInit() {\n    this._akinator.gameHasStarted$.subscribe(\n      value => {\n        this.gameHasStarted = value\n        ;\n      });\n\n    this._akinator.startClass();\n    this._akinator.startTree();\n\n  }\n}\n","<app-start *ngIf=\"!gameHasStarted\"></app-start>\n<app-game *ngIf=\"gameHasStarted\">\n\n</app-game>\n  <!-- <button (click)=\"startGame()\">\n    Start Game:\n  </button> -->\n<!-- <audio controls autoplay loop>\n  <source src=\"./../assets/Theme.mp3\" type=\"audio/mp3\">\n</audio> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { StartComponent } from './pages/start/start.component';\nimport { GameComponent } from './pages/game/game.component';\n \nimport { AkinatorService } from './akinator.service';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule ,\n    FormsModule\n  ],\n  providers: [AkinatorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AkinatorService } from \"src/app/akinator.service\";\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n  pattern = this._akinator.pattern\n\n  mobile;\n  title = 'akinator';\n\n  gameHasStarted = false;\n  actualQuestion = \"\";\n  rpta = {animalName: \"\",animalPhoto:\"\"};\n  newAnimalQuestion = \"Who was your animal?\";\n  newAnimal = \"\"\n  newAnimalCompleted = false;\n  wrongGuess = false;\n  questionToDiference = \"\";\n  newQuestion = \"\";\n  winSentence = \"\";\n  thanksNewAnimal = \"Thank You, our team will review your question !!!\";\n  thanksNewAnimalBool = false;\n  counter = 1\n  constructor( private _akinator:AkinatorService) {\n\n   }\n\n  ngOnInit(): void {\n    if (window.screen.width <= 600) { // 768px portrait\n      this.mobile = true;\n    }\n\n\n    this._akinator.gameHasStarted$.subscribe(\n      value => {\n        this.gameHasStarted = value\n        ;\n      });\n      console.log(\"hasStarted()\");\n      this.hasStarted()\n\n    \n  }\n\n\n\n  playAgain(){\n  this.gameHasStarted = true;\n  this.actualQuestion = \"\";\n  this.rpta = {animalName: \"\",animalPhoto:\"\"};\n  this.newAnimalQuestion = \"Who was your animal?\";\n  this.newAnimal = \"\"\n  this.newAnimalCompleted = false;\n  this.wrongGuess = false;\n  this.questionToDiference = \"\";\n  this.newQuestion = \"\";\n  this.winSentence = \"\";\n  this.thanksNewAnimalBool = false;\n  this._akinator.pattern = [];\n  this.counter = 1 ;\n  this.hasStarted()\n}\n \n  sendMessage(msg: string){\n  } \n  nextQuestion(answer: number){\n    console.log(\"one time\");\n    this._akinator.pattern.push(answer);    \n    let data = this._akinator.getQuestion()\n    if (data.animal) {\n      this.rpta.animalName = data.question\n    }\n      this.actualQuestion = data.question\n    this.counter++;\n  }\n\n  lastAnwerF(lastAnwer:boolean){\n    if(!lastAnwer){\n      this.wrongGuess = true;\n    }else{\n      this.winSentence = \"Great, guessed right one more time !\"\n    }\n  }\n\n \n\n  newAnimalCreated(){\n    this.newAnimalCompleted =  true;\n    this.questionToDiference = `Please give me a yes/no question that\n    distinguishes between ${this.newAnimal} and ${this.rpta.animalName}`\n  }\n\n  newQuestionCreated(){\n\n    let lastinfo = {newQuestion:this.newQuestion,\n      newAnimal: this.newAnimal};\n      this.thanksNewAnimalBool = true\n      console.log(lastinfo);\n      this.winSentence = \"we have improve with your feedback\"\n  }\n\n  // \n\n  hasStarted(){\n    let data = this._akinator.getQuestion()\n    this.actualQuestion= data.question\n  }\n}\n","<div class=\"bg_img\">\n  <!-- <div fxShow fxHide.xs=\"false\" fxHide.lg=\"true\"> ... </div> -->\n  <div class=\"rw-ui-container\"></div>\n  <div class=\"logo\">\n    <img src=\"assets/logo_akinator.png\" alt=\"\">\n  </div>\n  <div class=\"bg\">\n \n    <!-- imagen de akinator -->\n    <div class=\"wp_image\">\n      <img src=\"assets/defi.png\" alt=\"\">\n    </div>\n    <div class=\"wp_questions\">\n      <div class=\"bubble-question\" *ngIf='!wrongGuess'>\n        <div class=\"bubble-tail\" *ngIf=\"!mobile\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"85\" height=\"102\">\n            <polygon points=\"30,0 30,20 29,25 27,30 22,37 15,45 0,60 30,60 30,102 85,102 85,0\"></polygon>\n          </svg>\n          <p *ngIf=\"rpta && !rpta.animalName\" class=\"number\">{{counter}}</p>\n          <p *ngIf=\"rpta && rpta.animalName\" class=\"number\">----</p>\n\n        </div>\n        <div class=\"bubble-body\">\n          <div *ngIf=\"mobile &&  !rpta.animalName\">\n            <h5> Question Nro: <span>{{counter}}</span>\n            </h5>\n          </div>\n          <div *ngIf=\"rpta && !rpta.animalName\">\n            <p>{{actualQuestion}}</p>\n          </div>\n          <div *ngIf=\"rpta && rpta.animalName && !winSentence\" class=\"bubble-propose\">\n            <div>\n              <p>I think of</p>\n            </div>\n            <div class=\"wp_animalImg\">\n              <img src={{rpta.animalPhoto}} alt=\"\" width=\"100px\">\n            </div>\n            <h5>\"{{rpta.animalName}}\"</h5>\n          </div>\n          <div *ngIf=\"winSentence\" class=\"win-bubble\">\n            <div>\n              <h1>{{winSentence}}</h1>\n              <h2>{{rpta.animalName}}</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bubble-answers\">\n        <!-- <div *ngIf=\"winSentence\" class=\"win-bubble\">\n          <div>\n            <h1>{{winSentence}}</h1>\n            <h2>A {{rpta}}</h2>\n          </div>\n        </div> -->\n\n        <div class=\"wp_answer_again\" *ngIf=\"winSentence && !thanksNewAnimalBool\">\n          <ul class=\"answer_again\">\n            <li class=\"play_again\" (click)=\"playAgain()\">Play Again</li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"rpta && !rpta.animalName && !wrongGuess\">\n          <ul class=\"answer_list\">\n            <li class=\"a_yes\" (click)=\"nextQuestion(1)\">Yes</li>\n            <li class=\"a_no\" (click)=\"nextQuestion(0)\">No</li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"rpta && rpta.animalName && !winSentence && !wrongGuess\">\n          <ul class=\"answer_list\">\n            <li class=\"a_yes\" (click)=\"lastAnwerF(true)\">Yes</li>\n            <li class=\"a_no\" (click)=\"lastAnwerF(false)\">No</li>\n          </ul>\n        </div>\n\n\n        <div *ngIf='wrongGuess && !newAnimalCompleted' class=\"newAnimalQuestion\">\n          <div>\n            <h1> {{newAnimalQuestion}}\n            </h1>\n          </div>\n\n          <div class=\"wp-input\">\n            <input type=\"text\" [(ngModel)]=\"newAnimal\">\n            <button (click)='newAnimalCreated()'>\n              Send\n            </button>\n          </div>\n        </div>\n\n        <div *ngIf='newAnimalCompleted  && !thanksNewAnimalBool' class=\"newAnimalQuestion\">\n          <div>\n            <h1> {{questionToDiference}}\n            </h1>\n          </div>\n          <div class=\"wp-input\">\n            <input type=\"text\" [(ngModel)]=\"newQuestion\">\n            <button (click)=\"newQuestionCreated()\">\n              Send\n            </button>\n          </div>\n        </div>\n\n\n        <div *ngIf=\"thanksNewAnimalBool\" class=\"thanksNewAnimalBool\">\n          <div class=\"thanksNewAnimal\">\n            <h1> {{thanksNewAnimal}}\n            </h1>\n          </div>\n          <div class=\"wp_answer_again\">\n            <ul class=\"answer_again\">\n              <li class=\"play_again\" (click)=\"playAgain()\">Play Again</li>\n            </ul>\n          </div>\n        </div>\n\n\n      </div>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit ,ElementRef } from '@angular/core';\nimport { AkinatorService } from \"src/app/akinator.service\";\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  switcher = true\n  constructor( private _akinator:AkinatorService,private _elementRef : ElementRef){\n  }\n  ngOnInit(): void {\n    this._akinator.announceMission(false);\n\n  }\n\n  startGame(){\n    this._akinator.announceMission(true);\n    // this._akinator.gameHasStarted = true\n  }\n\n  playSong(){\n    let domElement = this._elementRef.nativeElement.querySelector(`#myAudio`);\n    if(this.switcher){\n      domElement.play();\n      this.switcher = false\n    } else{\n      domElement.pause(); \n      this.switcher = true\n    }\n  }\n\n\n\n}\n","<div class=\"bg_img\">\n  <div class=\"wp_music\" (click)=\"playSong()\">\n    <img src=\"assets/music.png\" alt=\"\">\n    <audio loop id=\"myAudio\">\n      <source src=\"assets/Theme.mp3\" type=\"audio/mp3\">\n    </audio>\n  </div>\n\n  <div class=\"wp_image\">\n    <img src=\"assets/akinator.png\" alt=\"\">\n  </div>\n  <div class=\"wp_btn-play\">\n    <div class=\"btn-play\" (click)=\"startGame()\">\n      <span class=\"text-play\">\n        <span >♦♦</span>\n        PLAY\n        <span>♦♦</span>\n      </span>\n    </div>\n\n  </div>\n</div>","/* Binary Search Tree */\n\nclass Node {\n  constructor(data, animal, question, left = null, right = null) {\n    this.data = data;\n    this.left = left;\n    this.right = right;\n    // this.x = x;\n    // this.y = y;\n    // this.level = level\n    this.animal = animal\n    this.question = question\n  }\n}\n\n\n\nclass BST {\n  constructor() {\n    this.root = null;\n  }\n  add(data, animal, question) {\n    const node = this.root;\n    let levelDepth = 1\n    let counterLeft = 0\n    let counterRight = 0\n    let iter = 0\n    if (node === null) {\n      this.root = new Node(data, animal, question);\n      return;\n    } else {\n\n      const searchTree = function (node) {\n        // console.log(data);\n        if (data != [] && data[iter] == 0) {\n          if (node.left === null) {\n            levelDepth++\n            counterLeft++\n            iter++\n\n            node.left = new Node(data, animal, question);\n            // console.log(levelDepth,\"levelDepth-left\");\n            // console.log(node.data,node.x,\"rigth\",node.level);\n            return;\n          } else if (node.left !== null) {\n            levelDepth++\n            counterLeft++\n            iter++\n            // console.log(node.data,node.x,\"left\",node.level);\n            return searchTree(node.left);\n          }\n        } else if (data != [] && data[iter] == 1) {\n          if (node.right === null) {\n            levelDepth++\n            counterRight++\n            iter++\n\n            // console.log(levelDepth,\"levelDepth-right\");\n            node.right = new Node(data, animal, question);\n            // find nivel\n            // console.log(node.data,node.x,\"rigth\",node.level);\n            return;\n          } else if (node.right !== null) {\n            levelDepth++\n            counterRight++\n            iter++\n            // console.log(node.data,node.x,\"rigth\",node.level);\n            return searchTree(node.right);\n          }\n        } else {\n          return null;\n        }\n      };\n      return searchTree(node);\n    }\n  }\n  findMin() {\n    let current = this.root;\n    while (current.left !== null) {\n      current = current.left;\n    }\n    return current.data;\n  }\n  findMax() {\n    let current = this.root;\n    while (current.right !== null) {\n      current = current.right;\n    }\n    return current.data;\n  }\n  find(data) {\n    let current = this.root;\n    // console.log(data);\n    // console.log(current.data);\n    let i = 0;\n    let fatherCurrent = {}\n    while (JSON.stringify(current.data) !== JSON.stringify(data)) {\n      if (data[i] == 0) {\n        fatherCurrent = current\n        current = current.left;\n      } else {\n        fatherCurrent = current\n        current = current.right;\n      }\n      i++;\n      if (current === null) {\n        console.log(fatherCurrent);\n        return fatherCurrent;\n      }\n    }\n    // console.log(current);\n    return current;\n  }\n  isPresent(data) {\n    let current = this.root;\n    while (current) {\n      if (data === current.data) {\n        return true;\n      }\n      if (data < current.data) {\n        current = current.left;\n      } else {\n        current = current.right;\n      }\n    }\n    return false;\n  }\n  remove(data) {\n    const removeNode = function (node, data) {\n      if (node == null) {\n        return null;\n      }\n      if (data == node.data) {\n        // node has no children \n        if (node.left == null && node.right == null) {\n          return null;\n        }\n        // node has no left child \n        if (node.left == null) {\n          return node.right;\n        }\n        // node has no right child \n        if (node.right == null) {\n          return node.left;\n        }\n        // node has two children \n        var tempNode = node.right;\n        while (tempNode.left !== null) {\n          tempNode = tempNode.left;\n        }\n        node.data = tempNode.data;\n        node.right = removeNode(node.right, tempNode.data);\n        return node;\n      } else if (data < node.data) {\n        node.left = removeNode(node.left, data);\n        return node;\n      } else {\n        node.right = removeNode(node.right, data);\n        return node;\n      }\n    }\n    this.root = removeNode(this.root, data);\n  }\n  isBalanced() {\n    return (this.findMinHeight() >= this.findMaxHeight() - 1)\n  }\n  findMinHeight(node = this.root) {\n    if (node == null) {\n      return -1;\n    };\n    let left = this.findMinHeight(node.left);\n    let right = this.findMinHeight(node.right);\n    if (left < right) {\n      return left + 1;\n    } else {\n      return right + 1;\n    };\n  }\n  findMaxHeight(node = this.root) {\n    if (node == null) {\n      return -1;\n    };\n    let left = this.findMaxHeight(node.left);\n    let right = this.findMaxHeight(node.right);\n    if (left > right) {\n      return left + 1;\n    } else {\n      return right + 1;\n    };\n  }\n  inOrder() {\n    // let nodeParent = this.root\n    if (this.root == null) {\n      return null;\n    } else {\n      var result = new Array();\n      let traverseInOrder = (node, nodeParent = node) => {\n\n\n\n        node.left && traverseInOrder(node.left, node);\n        result.push(node.data);\n\n        fill(255);\n        noStroke();\n        // console.log(node,\"data\");\n        // console.log(this.root,\"root\");\n        stroke(255)\n        line(nodeParent.x, nodeParent.y, node.x, node.y)\n\n\n\n        // text(node.data,node.x,node.y);\n        if (node.animal) {\n          text(node.animal, node.x + 15, node.y);\n        } else if (node.question) {\n          text(node.question, node.x + 15, node.y);\n        }\n\n        node.right && traverseInOrder(node.right, node);\n\n\n\n      }\n      traverseInOrder(this.root);\n      return result;\n    };\n  }\n  preOrder() {\n    if (this.root == null) {\n      return null;\n    } else {\n      var result = new Array();\n      function traversePreOrder(node) {\n        result.push(node.data);\n        node.left && traversePreOrder(node.left);\n        node.right && traversePreOrder(node.right);\n      };\n      traversePreOrder(this.root);\n      return result;\n    };\n  }\n  postOrder() {\n    if (this.root == null) {\n      return null;\n    } else {\n      var result = new Array();\n      function traversePostOrder(node) {\n        node.left && traversePostOrder(node.left);\n        node.right && traversePostOrder(node.right);\n        result.push(node.data);\n      };\n      traversePostOrder(this.root);\n      return result;\n    }\n  }\n\n  levelOrder() {\n    let result = [];\n    let Q = [];\n    if (this.root != null) {\n      Q.push(this.root);\n      while (Q.length > 0) {\n        let node = Q.shift();\n        result.push(node.data);\n        if (node.left != null) {\n          Q.push(node.left);\n        };\n        if (node.right != null) {\n          Q.push(node.right);\n        };\n      };\n      return result;\n    } else {\n      return null;\n    };\n  };\n}\n\n\nmodule.exports = {\n  Node,\n  BST\n};\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}