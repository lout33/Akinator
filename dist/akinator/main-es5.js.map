{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/akinator.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/game/game.component.ts","webpack:///src/app/pages/game/game.component.html","webpack:///src/app/pages/start/start.component.ts","webpack:///src/app/pages/start/start.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AkinatorService","http","gameHasStarted","gameHasStarted$","asObservable","url","pattern","mission","next","httpOptions","headers","console","log","post","providedIn","AppComponent","_akinator","subscribe","value","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","GameComponent","title","actualQuestion","rpta","animalName","animalPhoto","newAnimalQuestion","newAnimal","newAnimalCompleted","wrongGuess","questionToDiference","newQuestion","winSentence","thanksNewAnimal","thanksNewAnimalBool","counter","window","screen","width","mobile","hasStarted","msg","answer","push","getQuestion","data","animal","question","lastAnwer","lastinfo","StartComponent","announceMission","startGame","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AkinatorService {\n\n\n  private gameHasStarted = new Subject<boolean>();\n  gameHasStarted$ = this.gameHasStarted.asObservable();\n  url = \"http://18.222.226.65:3000/play/\"\n  pattern = []\n  \n  announceMission(mission: boolean) {\n    this.gameHasStarted.next(mission);\n  }\n\n  // confirmMission(astronaut: string) {\n  //   this.missionConfirmedSource.next(astronaut);\n  // }\n  constructor(private http:HttpClient) { }\n\n  getQuestion(){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n    console.log(this.pattern);\n    \n    return this.http.post(this.url,{pattern:this.pattern},httpOptions);\n  }\n}\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AkinatorService } from \"./akinator.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor( private _akinator:AkinatorService){\n    \n  }\n  // title = 'akinator';\n  // gameHasStarted\n  gameHasStarted = false;\n\n  // actualQuestion = this._akinator.actualQuestion;\n\n  // rpta = this._akinator.rpta;\n  // newAnimalQuestion = \"Who was your animal?\";\n  // newAnimal = \"\"\n  // newAnimalCompleted = false;\n  // lastAnwer = true;\n\n  // questionToDiference = \"\";\n  // newQuestion = \"\";\n\n  // rptaFINAL = \"\"\n  // sendMessage(msg: string){\n  //   this._socket.emit(\"message\", msg);\n  // } \n  // nextQuestion(answer: string){\n  //   this._socket.emit(\"answer\", answer);\n  // }\n\n  // lastAnwerF(lastAnwer){\n  //   if(!lastAnwer){\n  //     this.lastAnwer = false\n  //   }else{\n  //     this.rptaFINAL = \"Iam a genius\"\n  //   }\n  // }\n\n \n\n  // newAnimalCreated(){\n  //   this.newAnimalCompleted =  true;\n  //   this.questionToDiference = `Whats the diference between your ${this.newAnimal} and ${this.rpta}`\n  // }\n\n  // newQuestionCreated(){\n\n  //   let lastinfo = {newQuestion:this.newQuestion,\n  //     newAnimal: this.newAnimal}\n  //     console.log(lastinfo);\n      \n  //   this._socket.emit(\"last-info\",lastinfo);\n  //     this.rptaFINAL = \"we have improve with your feedback\"\n  // }\n\n  ngOnInit() {\n    this._akinator.gameHasStarted$.subscribe(\n      value => {\n        this.gameHasStarted = value\n        ;\n      });\n  }\n}\n","<app-start *ngIf=\"!gameHasStarted\"></app-start>\n<app-game *ngIf=\"gameHasStarted\">\n\n</app-game>\n  <!-- <button (click)=\"startGame()\">\n    Start Game:\n  </button> -->\n<!-- <audio controls autoplay loop>\n  <source src=\"./../assets/Theme.mp3\" type=\"audio/mp3\">\n</audio> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { StartComponent } from './pages/start/start.component';\nimport { GameComponent } from './pages/game/game.component';\n \nimport { AkinatorService } from './akinator.service';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule ,\n    FormsModule\n  ],\n  providers: [AkinatorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AkinatorService } from \"src/app/akinator.service\";\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n  pattern = this._akinator.pattern\n\n  mobile;\n  title = 'akinator';\n\n  gameHasStarted = false;\n  actualQuestion = \"\";\n  rpta = {animalName: \"\",animalPhoto:\"\"};\n  newAnimalQuestion = \"Who was your animal?\";\n  newAnimal = \"\"\n  newAnimalCompleted = false;\n  wrongGuess = false;\n  questionToDiference = \"\";\n  newQuestion = \"\";\n  winSentence = \"\";\n  thanksNewAnimal = \"Thank You, our team will review your question !!!\";\n  thanksNewAnimalBool = false;\n  counter = 1\n  constructor( private _akinator:AkinatorService) {\n\n   }\n\n  ngOnInit(): void {\n    if (window.screen.width <= 600) { // 768px portrait\n      this.mobile = true;\n    }\n\n\n    this._akinator.gameHasStarted$.subscribe(\n      value => {\n        this.gameHasStarted = value\n        ;\n      });\n      console.log(\"hasStarted()\");\n      this.hasStarted()\n\n    \n  }\n\n\n\n  playAgain(){\n  this.gameHasStarted = true;\n  this.actualQuestion = \"\";\n  this.rpta = {animalName: \"\",animalPhoto:\"\"};\n  this.newAnimalQuestion = \"Who was your animal?\";\n  this.newAnimal = \"\"\n  this.newAnimalCompleted = false;\n  this.wrongGuess = false;\n  this.questionToDiference = \"\";\n  this.newQuestion = \"\";\n  this.winSentence = \"\";\n  this.thanksNewAnimalBool = false;\n  this._akinator.pattern = [];\n  this.counter = 1 ;\n  this.hasStarted()\n}\n \n  sendMessage(msg: string){\n  } \n  nextQuestion(answer: number){\n    console.log(\"one time\");\n    this._akinator.pattern.push(answer);    \n    this._akinator.getQuestion().subscribe((data:any) => {\n      if (data.animal) {\n        this.rpta.animalName = data.question\n      }\n      this.actualQuestion = data.question\n    })\n    this.counter++;\n  }\n\n  lastAnwerF(lastAnwer:boolean){\n    if(!lastAnwer){\n      this.wrongGuess = true;\n    }else{\n      this.winSentence = \"Great, guessed right one more time !\"\n    }\n  }\n\n \n\n  newAnimalCreated(){\n    this.newAnimalCompleted =  true;\n    this.questionToDiference = `Please give me a yes/no question that\n    distinguishes between ${this.newAnimal} and ${this.rpta.animalName}`\n  }\n\n  newQuestionCreated(){\n\n    let lastinfo = {newQuestion:this.newQuestion,\n      newAnimal: this.newAnimal};\n      this.thanksNewAnimalBool = true\n      console.log(lastinfo);\n      this.winSentence = \"we have improve with your feedback\"\n  }\n\n  // \n\n  hasStarted(){\n    this._akinator.getQuestion().subscribe((data:any) => {\n      this.actualQuestion = data.question\n    })\n  }\n}\n","<div class=\"bg_img\">\n  <!-- <div fxShow fxHide.xs=\"false\" fxHide.lg=\"true\"> ... </div> -->\n\n  <div class=\"logo\">\n    <img src=\"assets/logo_akinator.png\" alt=\"\">\n  </div>\n  <div class=\"bg\">\n\n    <!-- imagen de akinator -->\n    <div class=\"wp_image\">\n      <img src=\"assets/defi.png\" alt=\"\">\n    </div>\n\n\n\n\n    <div class=\"wp_questions\">\n\n      <div class=\"bubble-question\" *ngIf='!wrongGuess'>\n        <div class=\"bubble-tail\" *ngIf=\"!mobile\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"85\" height=\"102\">\n            <polygon points=\"30,0 30,20 29,25 27,30 22,37 15,45 0,60 30,60 30,102 85,102 85,0\"></polygon>\n          </svg>\n          <p *ngIf=\"rpta && !rpta.animalName\" class=\"number\">{{counter}}</p>\n          <p *ngIf=\"rpta && rpta.animalName\" class=\"number\">----</p>\n\n        </div>\n        <div class=\"bubble-body\">\n          <div *ngIf=\"mobile &&  !rpta.animalName\">\n            <h5> Question Nro: <span>{{counter}}</span>\n            </h5>\n          </div>\n          <div *ngIf=\"rpta && !rpta.animalName\">\n            <p>{{actualQuestion}}</p>\n          </div>\n          <div *ngIf=\"rpta && rpta.animalName && !winSentence\" class=\"bubble-propose\">\n            <div>\n              <p>I think of</p>\n            </div>\n            <div class=\"wp_animalImg\">\n              <img src={{rpta.animalPhoto}} alt=\"\" width=\"100px\">\n            </div>\n            <h5>\"{{rpta.animalName}}\"</h5>\n          </div>\n          <div *ngIf=\"winSentence\" class=\"win-bubble\">\n            <div>\n              <h1>{{winSentence}}</h1>\n              <h2>{{rpta.animalName}}</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bubble-answers\">\n        <!-- <div *ngIf=\"winSentence\" class=\"win-bubble\">\n          <div>\n            <h1>{{winSentence}}</h1>\n            <h2>A {{rpta}}</h2>\n          </div>\n        </div> -->\n\n        <div class=\"wp_answer_again\" *ngIf=\"winSentence && !thanksNewAnimalBool\">\n          <ul class=\"answer_again\">\n            <li class=\"play_again\" (click)=\"playAgain()\">Play Again</li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"rpta && !rpta.animalName && !wrongGuess\">\n          <ul class=\"answer_list\">\n            <li class=\"a_yes\" (click)=\"nextQuestion(1)\">Yes</li>\n            <li class=\"a_no\" (click)=\"nextQuestion(0)\">No</li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"rpta && rpta.animalName && !winSentence && !wrongGuess\">\n          <ul class=\"answer_list\">\n            <li class=\"a_yes\" (click)=\"lastAnwerF(true)\">Yes</li>\n            <li class=\"a_no\" (click)=\"lastAnwerF(false)\">No</li>\n          </ul>\n        </div>\n\n\n        <div *ngIf='wrongGuess && !newAnimalCompleted' class=\"newAnimalQuestion\">\n          <div>\n            <h1> {{newAnimalQuestion}}\n            </h1>\n          </div>\n\n          <div class=\"wp-input\">\n            <input type=\"text\" [(ngModel)]=\"newAnimal\">\n            <button (click)='newAnimalCreated()'>\n              Send\n            </button>\n          </div>\n        </div>\n\n        <div *ngIf='newAnimalCompleted  && !thanksNewAnimalBool' class=\"newAnimalQuestion\">\n          <div>\n            <h1> {{questionToDiference}}\n            </h1>\n          </div>\n          <div class=\"wp-input\">\n            <input type=\"text\" [(ngModel)]=\"newQuestion\">\n            <button (click)=\"newQuestionCreated()\">\n              Send\n            </button>\n          </div>\n        </div>\n\n\n        <div *ngIf=\"thanksNewAnimalBool\" class=\"thanksNewAnimalBool\">\n          <div class=\"thanksNewAnimal\">\n            <h1> {{thanksNewAnimal}}\n            </h1>\n          </div>\n          <div class=\"wp_answer_again\">\n            <ul class=\"answer_again\">\n              <li class=\"play_again\" (click)=\"playAgain()\">Play Again</li>\n            </ul>\n          </div>\n        </div>\n\n\n      </div>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AkinatorService } from \"src/app/akinator.service\";\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  constructor( private _akinator:AkinatorService){\n  }\n  ngOnInit(): void {\n    this._akinator.announceMission(false);\n\n  }\n\n  startGame(){\n\n    this._akinator.announceMission(true);\n    // this._akinator.gameHasStarted = true\n\n    \n  }\n\n}\n","<div class=\"bg_img\">\n\n\n  <div class=\"wp_image\">\n    <img src=\"assets/akinator.png\" alt=\"\">\n  </div>\n  <div class=\"wp_btn-play\">\n    <div class=\"btn-play\" (click)=\"startGame()\">\n      <span class=\"text-play\">\n        <span >♦♦</span>\n        PLAY\n        <span>♦♦</span>\n      </span>\n    </div>\n\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}